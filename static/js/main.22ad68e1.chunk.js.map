{"version":3,"sources":["Components/InputPoke/InputPoke.js","Components/PokemonComp/PokemonComp.js","Components/DocumentPDF/DocumentPDF.js","App.js","reportWebVitals.js","index.js"],"names":["InputPoke","className","id","type","onChange","this","props","handleChange","htmlFor","name","onClick","clickSend","Component","PokemonComp","pokemonName","src","pokemonId","alt","height","width","pokemonXp","pokemonHeight","pokemonWidth","clickGeneratePDF","DocumentPDF","styles","StyleSheet","create","page","flexDirection","backgroundColor","header","textAlign","margin","padding","fontSize","section","image","alignSelf","sectionCenter","alignItems","size","style","uri","saveBlob","blob","filename","a","document","createElement","body","appendChild","display","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","savePdf","pdf","toBlob","App","onClickSend","event","fetch","state","pokemonInput","then","response","json","pokemon","setState","pokemonJSON","catch","error","console","log","onHandleChange","target","value","onClickGeneratePDF","base_experience","weight","pokemonSprite","sprites","front_default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22ad68e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'materialize-css';\n\nexport default class InputPoke extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n         \n                    <h1 className=\"center\">{'Pokedex'}</h1>\n                    <div className=\"input-field col s6\">\n                        <input id=\"last_name\" type=\"text\" className=\"validate\" onChange={this.props.handleChange} />\n                        <label htmlFor=\"last_name\">{'Ingrese un pokemon'}</label>\n                    </div>\n\n                    <div className=\"center\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={this.props.clickSend}>{'Buscar'}\n                            <i className=\"material-icons right\">send</i>\n                        </button>\n                    </div>\n    \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class PokemonComp extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"center\">\n                    <h1>{this.props.pokemonName}</h1>\n                    <img src={'https://pokeres.bastionbot.org/images/pokemon/'+this.props.pokemonId+'.png'} alt=\"pokemonSprite\" height=\"auto\" width=\"300px\"/>\n                </div>\n                <h4>{'Pokemon  #'+this.props.pokemonId+'.'}</h4>\n                <h4>{'Experiencia Base: '+this.props.pokemonXp+' xp.'}</h4>\n                <h4>{'Altura: '+this.props.pokemonHeight+' decimetros.'}</h4>\n                <h4>{'Peso: '+this.props.pokemonWidth+' hectogramos.'}</h4>\n                <br></br>\n                <div className=\"center\">\n                    <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={this.props.clickGeneratePDF}>{'Generar PDF'}\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </div>\n                <br></br>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Page, Text, View, Document, StyleSheet, Image } from '@react-pdf/renderer';\n//Document: es el contenedor del todo el documento\n//Page: es el contenedor de una pagina completa\n//View: es el contenedor de secciones del documento\n//Text,Image: son elementos dentro de un View\n//StyleSheet: es el editable para los estilos de los componentes\n\n\nexport default class DocumentPDF extends Component {\n    render() {\n        //Aqui se crea el estilo de los componentes en CSS\n        //Pero esta restringido a la documentacion:\n        //https://react-pdf.org/styling\n        const styles = StyleSheet.create({\n            page: {\n              flexDirection: 'column',\n              backgroundColor: '#FFFFFF'\n            },\n            header: {\n              textAlign:'center',\n              margin: 10,\n              padding: 10,\n              fontSize: 24,\n            },\n            section: {\n                textAlign:'left',\n                margin: 10,\n                padding: 10,\n                fontSize: 16,\n              },\n              image:{   \n                alignSelf: 'center',\n                height: 'auto',\n                width: '200px'\n              },\n              sectionCenter:{\n                alignItems: 'center',\n                margin: 10,\n                padding: 10,\n              }\n          });\n\n          //Aqui se crea el documento, se envuelven los componentes y \n          //se les da el estilo que definimos anteriormente\n          //Doc: https://react-pdf.org/components\n        return (\n            <Document>\n                <Page size=\"A4\" style={styles.page}>\n                    <View style={styles.header}>\n                        <Text>{this.props.pokemonName}</Text>\n                    </View>\n                    <View style={styles.sectionCenter}>\n                        <Image src={{uri:'https://pokeres.bastionbot.org/images/pokemon/'+this.props.pokemonId+'.png' }} style={styles.image}/>\n                    </View>\n                    <View style={styles.section}>\n                        <Text>{'Pokemon  #'+this.props.pokemonId+'.'}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text>{'Experiencia Base: '+this.props.pokemonXp+' xp.'}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text>{'Altura: '+this.props.pokemonHeight+' decimetros.'}</Text>\n                    </View>\n                    <View style={styles.section}>\n                        <Text>{'Peso: '+this.props.pokemonWidth+' hectogramos.'}</Text>\n                    </View>\n                </Page>\n            </Document>\n        )\n    }\n}\n","// Paquetes:\n// npm i @react-pdf/renderer\n// https://www.npmjs.com/package/@react-pdf/renderer\n// https://react-pdf.org/\n\n\nimport './App.css';\nimport InputPoke from './Components/InputPoke/InputPoke';\nimport React, { Component } from 'react';\nimport PokemonComp from './Components/PokemonComp/PokemonComp';\n//Componente a renderizar\nimport DocumentPDF from './Components/DocumentPDF/DocumentPDF';\nimport { pdf } from '@react-pdf/renderer';\n\n// Funciones que renderizan el archivo pdf\n//===================================================\nconst saveBlob = (blob, filename) => {\n  var a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.style.display = \"none\";\n  let url = window.URL.createObjectURL(blob);\n  a.href = url;\n  a.download = filename;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const savePdf = async (document, filename) => {\n  saveBlob(await pdf(document).toBlob(), filename);\n};\n//====================================================\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      pokemonJSON: null,\n      pokemonInput: ''\n    }\n  }\n\n  // Llamada a la API de Pokemon\n  onClickSend = (event) => {\n    fetch('https://pokeapi.co/api/v2/pokemon/'+this.state.pokemonInput)\n      .then(response => response.json())\n      .then(pokemon =>this.setState({pokemonJSON: pokemon}))\n      .catch((error) => {\n        console.log(error)\n      });\n      //console.log('Click!');\n      //console.log(this.state.pokemonJSON);\n  }\n\n  //Guarda cambios en el input\n  onHandleChange = (event) => {\n    this.setState({pokemonInput: event.target.value}); \n    //console.log(event.target.value);\n  }\n\n  // Trigger del boton que genera el pdf\n  onClickGeneratePDF = (event) =>{\n    const {pokemonJSON} = this.state;\n\n    //Llamada a la funcion savePDF que recibe el componente y \n    //un string como nombre del PDF\n    \n    //Ver DocumentPDF.js\n    savePdf(<DocumentPDF\n            pokemonName={pokemonJSON.name} \n            pokemonId={pokemonJSON.id}\n            pokemonXp={pokemonJSON.base_experience}\n            pokemonHeight={pokemonJSON.height}\n            pokemonWidth={pokemonJSON.weight}\n            />, \n          pokemonJSON.name+\".pdf\")\n  } \n\n  //Componentes mostrados en la web\n  render(){\n    const {pokemonJSON} = this.state;\n\n    if(this.state.pokemonJSON != null)\n    {\n      return (\n        <div>\n          <InputPoke clickSend={this.onClickSend} handleChange={this.onHandleChange}/>\n          <PokemonComp \n            pokemonName={pokemonJSON.name} \n            pokemonSprite={pokemonJSON.sprites.front_default}\n            pokemonId={pokemonJSON.id}\n            pokemonXp={pokemonJSON.base_experience}\n            pokemonHeight={pokemonJSON.height}\n            pokemonWidth={pokemonJSON.weight}\n            clickGeneratePDF={this.onClickGeneratePDF}\n          />\n        </div>\n        \n      );\n    }\n    else{\n      return (\n        <div>\n          <InputPoke clickSend={this.onClickSend} handleChange={this.onHandleChange}/>\n        </div>\n        \n      );\n    }\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}